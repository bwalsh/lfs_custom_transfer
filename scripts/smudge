#!/usr/bin/env python3

import sys, os


def parse_lfs_pointer(content):
    lines = content.splitlines()
    if lines[0] != b"version https://git-lfs.github.com/spec/v1":
        raise ValueError("Not a valid LFS pointer")

    oid_line = lines[1]
    size_line = lines[2]

    if not oid_line.startswith(b"oid sha256:"):
        raise ValueError("Invalid OID in LFS pointer")
    oid = oid_line[11:].decode('UTF-8')

    if not size_line.startswith(b"size "):
        raise ValueError("Invalid size in LFS pointer")
    return oid


def main():
    pointer_content = sys.stdin.buffer.read()

    try:
        oid = parse_lfs_pointer(pointer_content)
        lfs_dir = ".git/lfs/objects"  # Use os.path.join for robustness
        with open(os.path.join(lfs_dir, oid[:2], oid[2:]), 'rb') as f:
            original_content = f.read()
        sys.stdout.buffer.write(original_content)
    except ValueError:
        # If it's not a valid LFS pointer, return the content as is
        sys.stdout.buffer.write(pointer_content)


if __name__ == "__main__":
    main()
